"{\"code\":\"00000\",\"value\":{\"avoidSwitchScreen\":1,\"isNotice\":1,\"name\":\"HarmonyOS应用开发者高级认证\",\"questions\":[{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"class C {}\\\\r\\\\n\\\\r\\\\nlet value1: number = null;\\\\r\\\\nlet value2: string | null = null;\\\\r\\\\nlet value3: string | undefined = null;\\\\r\\\\nlet value4: C = null\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975224369507\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"value3\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718883402543317\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101719193782809040\"},{\"optionContent\":\"value4\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718883402543317\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101719193782809041\"},{\"optionContent\":\"value2\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718883402543317\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101719193782809039\"},{\"optionContent\":\"value1\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718883402543317\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101719193782809038\"}],\"inputType\":2,\"id\":\"101718883402543317\",\"type\":0,\"content\":\"以下哪些赋值语句在ArkTS中是合法。\",\"order\":0},{\"score\":1.0,\"componentId\":\"101718975224369507\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\" @State\",\"questionId\":\"101718883402544352\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718883402544355\"},{\"optionContent\":\" @Style\",\"questionId\":\"101718883402544352\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718883402544356\"},{\"optionContent\":\" @Shared\",\"questionId\":\"101718883402544352\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718883402544353\"},{\"optionContent\":\" @Sendable\",\"questionId\":\"101718883402544352\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718883402544354\"}],\"inputType\":1,\"id\":\"101718883402544352\",\"type\":0,\"content\":\"以下哪个装饰器用来表示并发共享对象。\",\"order\":1},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"class A {\\\\r\\\\n  v: number = 0;\\\\r\\\\n}\\\\r\\\\nclass B extends A {\\\\r\\\\n  u: string = '';\\\\r\\\\n}\\\\r\\\\nclass C {\\\\r\\\\n  v: number = 0;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nlet a1: A = new C();\\\\r\\\\nlet a2: A = new B();\\\\r\\\\nlet a3: B = new A();\\\\r\\\\nlet a4: C = new B();\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975224369507\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"a1\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718883402544322\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718970945968959\"},{\"optionContent\":\"a4\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718883402544322\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718970945968962\"},{\"optionContent\":\"a2\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718883402544322\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718970945968960\"},{\"optionContent\":\"a3\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718883402544322\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718970945968961\"}],\"inputType\":2,\"id\":\"101718883402544322\",\"type\":0,\"content\":\"以下哪些赋值语句在ArkTS中是合法。\",\"order\":2},{\"score\":1.0,\"componentId\":\"101718975224369507\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"Worker自行管理生命周期，开发者无需关心任务负载高低\",\"questionId\":\"101718883402544347\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718954920331513\"},{\"optionContent\":\" TaskPool支持任务延时执行\",\"questionId\":\"101718883402544347\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718954920331512\"},{\"optionContent\":\"开发者需要自行管理taskpool的数量及生命周期\",\"questionId\":\"101718883402544347\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718954920331514\"},{\"optionContent\":\"TaskPool和Worker的任务执行时长上限都是无限制\",\"questionId\":\"101718883402544347\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718954920331515\"}],\"inputType\":1,\"id\":\"101718883402544347\",\"type\":0,\"content\":\"以下关于Taskpool和Worker的描述正确的是\",\"order\":3},{\"score\":1.0,\"componentId\":\"101718975224369507\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"Object.values();\",\"questionId\":\"101718938979230914\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718938979540916\"},{\"optionContent\":\"Object.hasOwnProperty();\",\"questionId\":\"101718938979230914\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718938979540918\"},{\"optionContent\":\"Object.getOwnPropertyDescriptor();\",\"questionId\":\"101718938979230914\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718938979540915\"},{\"optionContent\":\"Object.getOwnPropertyDescriptors();\",\"questionId\":\"101718938979230914\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718938979540917\"}],\"inputType\":1,\"id\":\"101718938979230914\",\"type\":0,\"content\":\"ArkTS支持以下哪个函数？\",\"order\":4},{\"score\":1.0,\"componentId\":\"101718975238123407\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"设置cachedCount为1，则Grid在显示范围上下各缓存1行GridItem\",\"questionId\":\"101718888991181424\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718888991490427\"},{\"optionContent\":\"设置cachedCount为1，则Grid在显示范围下方缓存1行GridItem\",\"questionId\":\"101718888991181424\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718888991490428\"},{\"optionContent\":\"设置cachedCount为1，则Grid在显示范围上下各缓存1个GridItem\",\"questionId\":\"101718888991181424\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718888991490425\"},{\"optionContent\":\"设置cachedCount为1，则Grid在显示范围下方缓存1个GridItem\",\"questionId\":\"101718888991181424\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718888991490426\"}],\"inputType\":1,\"id\":\"101718888991181424\",\"type\":0,\"content\":\"以下关于垂直滚动Grid组件使用cachedCount属性的说明正确的是\",\"order\":5},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"// PageOne.ets\\\\r\\\\n@Component\\\\r\\\\nexport struct PageOneTmp {\\\\r\\\\n  @Consume('pageInfos') pageInfos: NavPathStack;\\\\r\\\\n\\\\r\\\\n  build() {\\\\r\\\\n    NavDestination() {\\\\r\\\\n      Column() {\\\\r\\\\n        Button('toPageTwo', { stateEffect: true, type: ButtonType.Capsule })\\\\r\\\\n          .width('80%')\\\\r\\\\n          .height(40)\\\\r\\\\n          .margin(20)\\\\r\\\\n          .onClick(() => {\\\\r\\\\n            this.pageInfos.pushPathByName('pageTwo',\\\\\\\"\\\\\\\")\\\\r\\\\n          })\\\\r\\\\n        Button('get', { stateEffect: true, type: ButtonType.Capsule })\\\\r\\\\n          .width('80%')\\\\r\\\\n          .height(40)\\\\r\\\\n          .margin(20)\\\\r\\\\n          .onClick(() => {\\\\r\\\\n            console.log('获取全部名为name的NavDestination页面的位置索引', JSON.stringify(this.pageInfos.getIndexByName('pageOne')))\\\\r\\\\n          })\\\\r\\\\n      }.width('100%').height('100%')\\\\r\\\\n    }.title('pageOne')\\\\r\\\\n    .onBackPressed(() => {\\\\r\\\\n      const popDestinationInfo = this.pageInfos.pop()\\\\r\\\\n      console.log('pop' + '返回值' + JSON.stringify(popDestinationInfo))\\\\r\\\\n      return true\\\\r\\\\n    })\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// PageTwo.ets\\\\r\\\\nexport class Pages {\\\\r\\\\n  names: string = \\\\\\\"\\\\\\\"\\\\r\\\\n  values: NavPathStack | null = null\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@Builder\\\\r\\\\nexport function pageTwoTmp(info: Pages) {\\\\r\\\\n  NavDestination() {\\\\r\\\\n    Column() {\\\\r\\\\n      Button('toPageOne', { stateEffect: true, type: ButtonType.Capsule })\\\\r\\\\n        .width('80%')\\\\r\\\\n        .height(40)\\\\r\\\\n        .margin(20)\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          (info.values as NavPathStack).pushPathByName('pageOne', null)\\\\r\\\\n        })\\\\r\\\\n    }.width('100%').height('100%')\\\\r\\\\n  }.title('pageTwo')\\\\r\\\\n  .onBackPressed(() => {\\\\r\\\\n    (info.values as NavPathStack).pop()\\\\r\\\\n    return true\\\\r\\\\n  })\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"componentId\":\"101718975238123407\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"2,4,1,6\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718886076262300\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718946704504271\"},{\"optionContent\":\"2,4,1,2\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718886076262300\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718946704504273\"},{\"optionContent\":\"0,6,1,6\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718886076262300\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718946704504274\"},{\"optionContent\":\"1,5,1,6\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718886076262300\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718946704504272\"}],\"inputType\":2,\"id\":\"101718886076262300\",\"type\":0,\"content\":\"<p>从桌面冷启动如下应用，点击Change按钮5次，整个过程中，代码中的2条log依次出现的次数，最初和最后画面上显示的【num = ?】的数字是</p>\",\"order\":6},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"class Info {\\\\r\\\\n  name: string;\\\\r\\\\n\\\\r\\\\n  constructor(name: string) {\\\\r\\\\n    this.name = name;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n@Entry\\\\r\\\\n@Component\\\\r\\\\nstruct Index {\\\\r\\\\n  @State nameList: Info[] = [new Info(\\\\\\\"Tom\\\\\\\"), new Info(\\\\\\\"Bob\\\\\\\"), new Info(\\\\\\\"John\\\\\\\")]\\\\r\\\\n\\\\r\\\\n  build() {\\\\r\\\\n    Column() {\\\\r\\\\n      ForEach(this.nameList, (item: Info) => {\\\\r\\\\n        Text(`${item.name}`)\\\\r\\\\n      })\\\\r\\\\n      Button(\\\\\\\"A\\\\\\\")\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          this.nameList.push(new Info(\\\\\\\"Lucy\\\\\\\"));\\\\r\\\\n        })\\\\r\\\\n      Button(\\\\\\\"B\\\\\\\")\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          this.nameList[0] = new Info(\\\\\\\"Eric\\\\\\\");\\\\r\\\\n\\\\r\\\\n        })\\\\r\\\\n      Button(\\\\\\\"C\\\\\\\")\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          this.nameList[0].name = \\\\\\\"Jim\\\\\\\";\\\\r\\\\n        })\\\\r\\\\n      Button(\\\\\\\"D\\\\\\\")\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          this.nameList = [new Info(\\\\\\\"Barry\\\\\\\"), new Info(\\\\\\\"Cindy\\\\\\\"), new Info(\\\\\\\"David\\\\\\\")];\\\\r\\\\n        })\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"componentId\":\"101718975238123407\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"D\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718889302114396\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718945955754983\"},{\"optionContent\":\"A\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718889302114396\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718945955754980\"},{\"optionContent\":\"B\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718889302114396\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718945955754981\"},{\"optionContent\":\"C\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718889302114396\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718945955754982\"}],\"inputType\":2,\"id\":\"101718889302114396\",\"type\":0,\"content\":\"<p>依次点击A、B、C、D四个按钮，其中不会触发UI刷新的是：</p>\",\"order\":7},{\"score\":1.0,\"componentId\":\"101718975238123407\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"{ offsetX: 81, offsetY: -89, surfaceWidth: 150, surfaceHeight: 500 }\",\"questionId\":\"101718889214585276\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718889214915278\"},{\"optionContent\":\"{ offsetX: 81, offsetY: -89, surfaceWidth: 200, surfaceHeight: 0 }\",\"questionId\":\"101718889214585276\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718889214915280\"},{\"optionContent\":\"{ offsetX: 75, offsetY: -100, surfaceWidth: 150, surfaceHeight: 500 }\",\"questionId\":\"101718889214585276\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718889214915279\"},{\"optionContent\":\"{ offsetX: -20, offsetY: 50, surfaceWidth: 200, surfaceHeight: 500 }\",\"questionId\":\"101718889214585276\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718889214915277\"}],\"inputType\":1,\"id\":\"101718889214585276\",\"type\":0,\"content\":\"现有一个宽高分别为200px的XComponent组件，其绑定了一个XComponentController(xcController)，依次进行如下操作：\\n(1) xcController.setXComponentSurfaceRect( {surfaceWidth: 150, surfaceHeight: 500} )\\n(2) 设置XComponent组件的padding为{ top: 5px, left: 10px, bottom: 15px, right: 20px }\\n(3) 将XComponent组件大小改为300px×300px\\n(4) 给XComponent组件设置一个宽度为2px的边框\\n(5) xcController.setXComponentSurfaceRect( { offsetX: -20, offsetY: 50, surfaceWidth: 200, surfaceHeight: -100 } )\\n之后，调用xcController.getXComponentSurfaceRect()的返回值为\",\"order\":8},{\"score\":1.0,\"componentId\":\"101718975238123407\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"End\",\"questionId\":\"101718889340912284\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718889341228286\"},{\"optionContent\":\"SpaceEvenly\",\"questionId\":\"101718889340912284\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718889341228288\"},{\"optionContent\":\"SpaceBetween\",\"questionId\":\"101718889340912284\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718889341228287\"},{\"optionContent\":\"Start\",\"questionId\":\"101718889340912284\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718889341228285\"}],\"inputType\":1,\"id\":\"101718889340912284\",\"type\":0,\"content\":\"如果要实现Row组件内的子元素均匀排列，且第一个元素与行首对齐，最后一个元素与行尾对齐，需要使用justifyContent的哪个枚举值\",\"order\":9},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"import promptAction from '@ohos.promptAction';\\\\r\\\\n// xxx.ets\\\\r\\\\n@Entry\\\\r\\\\n@Component\\\\r\\\\nstruct HitTestBehaviorExample {\\\\r\\\\n  build() {\\\\r\\\\n    // outer stack\\\\r\\\\n    Stack() {\\\\r\\\\n      Button('outer button')\\\\r\\\\n        .onClick((event) => {\\\\r\\\\n          promptAction.showToast({ message: `click事件触发------++++2` });\\\\r\\\\n        })\\\\r\\\\n      // inner stack\\\\r\\\\n      Stack() {\\\\r\\\\n        Button('inner button')\\\\r\\\\n          .onTouch((event) => {\\\\r\\\\n            promptAction.showToast({ message: `click事件触发------1` });\\\\r\\\\n          })\\\\r\\\\n      }\\\\r\\\\n      .width(\\\\\\\"100%\\\\\\\").height(\\\\\\\"100%\\\\\\\")\\\\r\\\\n      .hitTestBehavior(？)\\\\r\\\\n      .onTouch((event) => {\\\\r\\\\n        console.info('stack touched type: ' + (event as TouchEvent).type)\\\\r\\\\n      })\\\\r\\\\n\\\\r\\\\n    }.width(300).height(300)\\\\r\\\\n  }\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"componentId\":\"101718975238123407\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"HitTestMode.Transparent\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718888644939275\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718967174966989\"},{\"optionContent\":\"HitTestMode.None\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718888644939275\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718967174966991\"},{\"optionContent\":\"HitTestMode.Block\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718888644939275\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718967174966992\"},{\"optionContent\":\"HitTestMode.Default\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718888644939275\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718967174966990\"}],\"inputType\":2,\"id\":\"101718888644939275\",\"type\":0,\"content\":\"<p>如果想让outer button响应事件，hitTestBehavior该怎么配</p>\",\"order\":10},{\"score\":1.0,\"componentId\":\"101718975238123407\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"TransitionEffect.OPACITY.combine(TransitionEffect.translate({x:100}).animation({duration: 2000}))\",\"questionId\":\"101718888885100293\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718888885424295\"},{\"optionContent\":\"TransitionEffect.translate({x:100}).combine(TransitionEffect.OPACITY.animation({duration: 2000}))\",\"questionId\":\"101718888885100293\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718888885425296\"},{\"optionContent\":\"TransitionEffect.asymmetric(TransitionEffect.OPACITY.animation({duration:2000}), TransitionEffect.translate({x:100}).animation({duration: 2000}))\",\"questionId\":\"101718888885100293\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718888885425298\"},{\"optionContent\":\"TransitionEffect.OPACITY.animation({duration: 2000}).combine(TransitionEffect.translate({x:100}))\",\"questionId\":\"101718888885100293\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718888885425297\"}],\"inputType\":1,\"id\":\"101718888885100293\",\"type\":0,\"content\":\"下面哪种转场效果在入场动画时，表现为从透明度为0、相对于组件正常显示位置x方向平移100vp的状态，到默认的透明度为1、相对于组件不平移的状态，且透明度动画和平移动画的动画时长均为2000ms\",\"order\":11},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"// PageOne.ets\\\\r\\\\n@Component\\\\r\\\\nexport struct PageOneTmp {\\\\r\\\\n  @Consume('pageInfos') pageInfos: NavPathStack;\\\\r\\\\n\\\\r\\\\n  build() {\\\\r\\\\n    NavDestination() {\\\\r\\\\n      Column() {\\\\r\\\\n        Button('toPageTwo', { stateEffect: true, type: ButtonType.Capsule })\\\\r\\\\n          .width('80%')\\\\r\\\\n          .height(40)\\\\r\\\\n          .margin(20)\\\\r\\\\n          .onClick(() => {\\\\r\\\\n            this.pageInfos.pushPathByName('pageTwo',\\\\\\\"\\\\\\\")\\\\r\\\\n          })\\\\r\\\\n        Button('get', { stateEffect: true, type: ButtonType.Capsule })\\\\r\\\\n          .width('80%')\\\\r\\\\n          .height(40)\\\\r\\\\n          .margin(20)\\\\r\\\\n          .onClick(() => {\\\\r\\\\n            console.log('获取全部名为name的NavDestination页面的位置索引', JSON.stringify(this.pageInfos.getIndexByName('pageOne')))\\\\r\\\\n          })\\\\r\\\\n      }.width('100%').height('100%')\\\\r\\\\n    }.title('pageOne')\\\\r\\\\n    .onBackPressed(() => {\\\\r\\\\n      const popDestinationInfo = this.pageInfos.pop()\\\\r\\\\n      console.log('pop' + '返回值' + JSON.stringify(popDestinationInfo))\\\\r\\\\n      return true\\\\r\\\\n    })\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n// PageTwo.ets\\\\r\\\\nexport class Pages {\\\\r\\\\n  names: string = \\\\\\\"\\\\\\\"\\\\r\\\\n  values: NavPathStack | null = null\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@Builder\\\\r\\\\nexport function pageTwoTmp(info: Pages) {\\\\r\\\\n  NavDestination() {\\\\r\\\\n    Column() {\\\\r\\\\n      Button('toPageOne', { stateEffect: true, type: ButtonType.Capsule })\\\\r\\\\n        .width('80%')\\\\r\\\\n        .height(40)\\\\r\\\\n        .margin(20)\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          (info.values as NavPathStack).pushPathByName('pageOne', null)\\\\r\\\\n        })\\\\r\\\\n    }.width('100%').height('100%')\\\\r\\\\n  }.title('pageTwo')\\\\r\\\\n  .onBackPressed(() => {\\\\r\\\\n    (info.values as NavPathStack).pop()\\\\r\\\\n    return true\\\\r\\\\n  })\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"componentId\":\"101718975238123407\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"[1,2]\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718886180946310\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718946798761480\"},{\"optionContent\":\"[0,2]\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718886180946310\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718946798761482\"},{\"optionContent\":\"[2,1]\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718886180946310\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718946798761481\"},{\"optionContent\":\"[0,1]\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718886180946310\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718946798761479\"}],\"inputType\":2,\"id\":\"101718886180946310\",\"type\":0,\"content\":\"<p>已知下列代码PageOne页面为navigation中的某一子页面，依次点击PageOne页面中toPageTwo按钮，PageTwo页面中toPageOne按钮，此时点击get按钮获取全部名为name的NavDestination页面的位置索引为</p>\",\"order\":12},{\"score\":1.0,\"componentId\":\"101718975256454538\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"本地模拟器上运行的应用无需进行签名，简化了调试过程。\",\"questionId\":\"101718891664406638\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718891664406639\"},{\"optionContent\":\"本地模拟器当前不支持单元测试框架和UI测试框架的运行\",\"questionId\":\"101718891664406638\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718891664406642\"},{\"optionContent\":\"本地模拟器当前不支持查看HiLog以及FaultLog\",\"questionId\":\"101718891664406638\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718891664406641\"},{\"optionContent\":\"本地模拟器和真机的能力没有任何差异，真机上可以支持的能力在模拟器上都可以\",\"questionId\":\"101718891664406638\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718891664406640\"}],\"inputType\":1,\"id\":\"101718891664406638\",\"type\":0,\"content\":\"使用DevEco Studio进行复杂的跨设备功能开发与调试工作，期间频繁依赖本地模拟器来模拟多样化的设备环境。在这样的背景下，以下关于DevEco Studio本地模拟器所支持的规格与功能，哪一项描述是准确的\",\"order\":13},{\"score\":1.0,\"componentId\":\"101718975256454538\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"进入“Run > Edit Configurations”菜单，在“Deploy Multi Hap”选项卡下，勾选“Deploy Multi Hap Packages”，随后在列表中选择需要部署的模块。\",\"questionId\":\"101718891664406588\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718891664406591\"},{\"optionContent\":\"直接点击运行按钮，DevEco Studio会弹出对话框询问需要部署哪些模块，从中选择需要的模块后开始调试。\",\"questionId\":\"101718891664406588\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718891664406592\"},{\"optionContent\":\"在项目结构界面手动选择每个模块，单独编译并逐一将生成的HAP包通过HDC命令推送到设备上。\",\"questionId\":\"101718891664406588\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718891664406589\"},{\"optionContent\":\"无需特殊配置，DevEco Studio会自动检测到项目中的所有模块依赖，并在每次调试运行时自动部署所有相关HAP包。\",\"questionId\":\"101718891664406588\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718891664406590\"}],\"inputType\":1,\"id\":\"101718891664406588\",\"type\":0,\"content\":\"一个复杂的项目，该项目不仅包含主入口模块（Entry Module），还有多个特性的功能模块（Feature Modules/HSP），并且这些模块间存在着相互调用关系。为了确保在调试过程中能够完整地测试所有交互逻辑，需要将涉及到的所有模块的HAP包都部署到目标设备上。请从以下选项中选择正确的操作步骤来配置DevEco Studio，以便一次性部署和调试项目中的多个模块\",\"order\":14},{\"score\":1.0,\"componentId\":\"101718975256454538\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"小华右键点击代码编辑区，选择“Find Usages”选项，试图从其他地方引用该API的实例中学习如何使用分享功能。\",\"questionId\":\"101718891664406568\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718891664406572\"},{\"optionContent\":\"小华应该先停止编码工作，打开浏览器，手动搜索关键词“HarmonyOS ArkUI 分享API”，在官方网站的文档页面中寻找相关API的使用方法。\",\"questionId\":\"101718891664406568\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718891664406569\"},{\"optionContent\":\"小华将鼠标悬停在编辑器中已经键入或打算键入的API调用（例如 @system.router.push）上，等待编辑器自动弹出悬浮提示框，显示该API的简要信息和不同版本参数说明。随后，点击提示框右下角的“Show in API Reference”链接，直接跳转到详尽的API参考文档页面。\",\"questionId\":\"101718891664406568\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718891664406571\"},{\"optionContent\":\"小华在代码编辑区直接键入分享功能相关的API调用代码，如 arkui.getShare()，然后按F1键，期望编辑器能自动跳转到该API的文档页面。\",\"questionId\":\"101718891664406568\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718891664406570\"}],\"inputType\":1,\"id\":\"101718891664406568\",\"type\":0,\"content\":\"小华正在使用DevEco Studio开发一款基于HarmonyOS的ArkUI应用，该应用需要实现一个功能，即当用户点击按钮时，通过ArkTS/JS API调用系统的分享功能。小华对具体的API调用细节不太熟悉，如何通过DevEco Studio快速查阅相关的API文档。\",\"order\":15},{\"score\":1.0,\"componentId\":\"101718975256454538\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"在hvigor目录下，单击鼠标右键，选择New > Module...，创建新的Module，此时module将创建在该文件目录下。\",\"questionId\":\"101718891664406563\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718891664406566\"},{\"optionContent\":\"鼠标移到工程目录顶部，单击鼠标右键，选择New > Module...，开始创建新的Module，此时该module将创建在工程根目录下。\",\"questionId\":\"101718891664406563\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718891664406564\"},{\"optionContent\":\"在工程根目录下创建一个新的Directory，可在该目录下单击鼠标右键，选择New > Module...，创建新的Module，此时module将创建在该文件目录下。\",\"questionId\":\"101718891664406563\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718891664406567\"},{\"optionContent\":\"选中工程目录中任意文件，然后在菜单栏选择File > New > Module...，开始创建新的Module，此时该module将创建在工程根目录下。\",\"questionId\":\"101718891664406563\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718891664406565\"}],\"inputType\":1,\"id\":\"101718891664406563\",\"type\":0,\"content\":\"在开发HarmonyOS应用工程时，随着业务的发展，现在需要创建一个模块，关于在DevEco Studio中创建Module，下列选项哪种方式是错误的？\",\"order\":16},{\"score\":1.0,\"componentId\":\"101718975256454538\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"DevEco Studio的Project Explorer\",\"questionId\":\"101718891664406603\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718891664406605\"},{\"optionContent\":\"DevEco Studio的Terminal面板\",\"questionId\":\"101718891664406603\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718891664406607\"},{\"optionContent\":\"DevEco Studio的Device File Browser\",\"questionId\":\"101718891664406603\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718891664406606\"},{\"optionContent\":\"DevEco Studio的Log面板\",\"questionId\":\"101718891664406603\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718891664406604\"}],\"inputType\":1,\"id\":\"101718891664406603\",\"type\":0,\"content\":\"开发者张工想要高效地管理HarmonyOS设备中的文件，包括查看文件列表、进行文件搜索、新建及删除操作，以及在设备与PC间传输文件，而无需使用命令行工具。以下哪个选项最能准确概括张工能通过哪个工具直接在DevEco Studio界面完成上述所有操作\",\"order\":17},{\"score\":1.0,\"componentId\":\"101718975256454538\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"仅通过创建深度分析任务，利用perf数据详细分析性能瓶颈，修改代码后，不需再进行验证直接发布应用\",\"questionId\":\"101718891664406648\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718891664406651\"},{\"optionContent\":\"在发现应用性能不佳时，直接查看代码逻辑，凭经验修改后，利用Profiler的“Realtime Monitor”确认资源消耗是否降低\",\"questionId\":\"101718891664406648\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718891664406650\"},{\"optionContent\":\"首先使用“Realtime Monitor”实时监控，观察应用资源消耗，一旦发现CPU或内存异常，直接修改代码并重新编译\",\"questionId\":\"101718891664406648\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718891664406649\"},{\"optionContent\":\"利用“Realtime Monitor”初步识别性能瓶颈，创建深度分析任务定位根因，根据分析结果优化代码，再用“Realtime Monitor”验证优化效果\",\"questionId\":\"101718891664406648\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718891664406652\"}],\"inputType\":1,\"id\":\"101718891664406648\",\"type\":0,\"content\":\"在使用DevEco Studio的Profiler进行HarmonyOS应用性能优化的流程中，以下哪个步骤最恰当地描述了开发者利用Profiler工具进行性能问题识别、定位、优化及验证的完整过程\",\"order\":18},{\"score\":1.0,\"componentId\":\"101718975256454538\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"在模块级别build-profile.json5定义多个target，在每个target的config/deviceType中定义不同的设备类型\",\"questionId\":\"101718891664406623\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718891664406626\"},{\"optionContent\":\"在工程级别build-profile.json5定义多个product，在每个product的config/deviceType中定义不同的设备类型\",\"questionId\":\"101718891664406623\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718891664406627\"},{\"optionContent\":\"在模块级别build-profile.json5定义多个target，在每个target的config/distributionFilter中定义不同的设备类型\",\"questionId\":\"101718891664406623\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718891664406625\"},{\"optionContent\":\"在工程级别build-profile.json5定义多个product，在每个product的config/distributionFilter中定义不同的设备类型\",\"questionId\":\"101718891664406623\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718891664406624\"}],\"inputType\":1,\"id\":\"101718891664406623\",\"type\":0,\"content\":\"项目需要为不同的设备形态（如手机、智能手表）提供定制化构建。请说明如何在DevEco Studio中设置不同的构建配置，以生成针对不同设备的hap包？\",\"order\":19},{\"score\":1.0,\"componentId\":\"101718975256454538\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"张工需打开项目搜索功能，输入旧类名找到所有匹配项，逐一进行替换，完成更名操作。\",\"questionId\":\"101718891664407663\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718891664407667\"},{\"optionContent\":\"张工在代码编辑器中右键点击该类名，选择“Find Usage”，手动浏览所有引用位置并逐一修改为新名称。\",\"questionId\":\"101718891664407663\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718891664407665\"},{\"optionContent\":\"张工选中需要更名的类名，使用快捷键Shift+F6或右键菜单Refactor -> Rename，在弹出框中输入新名称并选择替换范围后，点击“Refactor”完成更名操作，确保所有相关引用自动更新。\",\"questionId\":\"101718891664407663\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718891664407666\"},{\"optionContent\":\"张工只需简单选中需要更名的类名，按下Delete键删除后直接输入新名称，DevEco Studio会自动识别并更新所有引用。\",\"questionId\":\"101718891664407663\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718891664407664\"}],\"inputType\":1,\"id\":\"101718891664407663\",\"type\":0,\"content\":\"张工正在使用DevEco Studio进行一个复杂项目的开发工作，项目中包含了成千上万行代码且涉及众多模块。在重构代码的过程中，他意识到需要对一个核心类名进行更改，考虑到这个类在整个项目中被广泛引用，手动修改不仅耗时且容易出错。\\n\\n基于DevEco Studio提供的代码编辑功能，以下哪个描述最准确地概述了张工如何高效且安全地完成对类名的更改，同时确保整个项目中所有相关引用同步更新？\",\"order\":20},{\"score\":1.0,\"componentId\":\"101718975269018327\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"hdc install -p ohosapp.hap\",\"questionId\":\"101718892447559630\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718892447559634\"},{\"optionContent\":\"bm install -p ohosapp.hap\",\"questionId\":\"101718892447559630\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718892447559631\"},{\"optionContent\":\"bm install -p /data/app/\",\"questionId\":\"101718892447559630\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718892447559633\"},{\"optionContent\":\"bm install -p ohosapp.hap -r\",\"questionId\":\"101718892447559630\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718892447559632\"}],\"inputType\":1,\"id\":\"101718892447559630\",\"type\":0,\"content\":\"应用程序开发调试过程中，经常需要安装新应用进行调测，下面安装应用操作错误的是\",\"order\":21},{\"score\":1.0,\"componentId\":\"101718975269018327\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"app包编译后的产物是.app文件。\",\"questionId\":\"101718892447559645\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718892447559646\"},{\"optionContent\":\"hap包编译后的产物是.hap文件。\",\"questionId\":\"101718892447559645\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718892447559647\"},{\"optionContent\":\"har包编译后的产物是.har文件。\",\"questionId\":\"101718892447559645\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718892447559648\"},{\"optionContent\":\"hsp包编译后的产物是.hsp文件。\",\"questionId\":\"101718892447559645\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718892447559649\"}],\"inputType\":1,\"id\":\"101718892447559645\",\"type\":0,\"content\":\"HarmonyOS提供了多种包结构，每种包编译后的产物都不同，下面说法错误的是\",\"order\":22},{\"score\":1.0,\"componentId\":\"101718975269018327\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"4\",\"questionId\":\"101718892419166343\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718892419461347\"},{\"optionContent\":\"2\",\"questionId\":\"101718892419166343\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718892419461345\"},{\"optionContent\":\"1\",\"questionId\":\"101718892419166343\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718892419461344\"},{\"optionContent\":\"3\",\"questionId\":\"101718892419166343\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718892419461346\"}],\"inputType\":1,\"id\":\"101718892419166343\",\"type\":0,\"content\":\"下面的配置存在有几处错误（）\\nmodule.json5配置文件：\\n{\\n  \\\"module\\\": {\\n    \\\"name\\\": \\\"entry\\\",\\n    // ...\\n    \\\"abilities\\\": [\\n      {\\n        \\\"name\\\": \\\"EntryAbility\\\",\\n        \\\"srcEntry\\\": \\\"./ets/entryability/EntryAbility.ets\\\",\\n        // ...\\n        \\\"skills\\\": [\\n          {\\n            \\\"entities\\\": [\\n              \\\"entity.system.home\\\"\\n            ],\\n            \\\"actions\\\": [\\n              \\\"ohos.want.action.home\\\"\\n            ]\\n          }\\n        ],\\n        \\\"metadata\\\": [\\n          {\\n            \\\"name\\\": \\\"ohos.entry.shortcuts\\\",\\n            \\\"resource\\\": \\\"$profile:shortcuts_config\\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n}\\n在/resources/base/profile/目录下配置shortcuts_config.json配置文件：\\n{\\n  \\\"shortcuts\\\": [\\n    {\\n      \\\"shortcutId\\\": \\\"id_test1\\\",\\n      \\\"label\\\": \\\"shortcutLabel\\\",\\n      \\\"icon\\\": \\\"$media:shortcutIcon\\\",\\n      \\\"wants\\\": [\\n        {\\n          \\\"bundleName\\\": \\\"com.ohos.hello\\\",\\n          \\\"moduleName\\\": \\\"entry\\\",\\n          \\\"abilityName\\\": \\\"EntryAbility\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\",\"order\":23},{\"score\":1.0,\"componentId\":\"101718975269018327\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"HAR可以作为二方库和三方库提供给其他应用使用，如果需要对代码资产进行保护时，建议开启混淆能力。\",\"questionId\":\"101718892447559640\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718892447559644\"},{\"optionContent\":\"HAR不支持引用AppScope目录中的资源。在编译构建时，AppScope中的内容不会打包到HAR中，因此会导致HAR资源引用失败。\",\"questionId\":\"101718892447559640\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718892447559643\"},{\"optionContent\":\"HAR不支持在设备上单独安装/运行，只能作为应用模块的依赖项被引用。\",\"questionId\":\"101718892447559640\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718892447559641\"},{\"optionContent\":\"HAR不支持使用page页面。\",\"questionId\":\"101718892447559640\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718892447559642\"}],\"inputType\":1,\"id\":\"101718892447559640\",\"type\":0,\"content\":\"HAR（Harmony Archive）是HarmonyOS提供的共享包，以下关于HAR的描述错误的是\",\"order\":24},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975283973647\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"[Example].[Entry].[EntryAbility] receive. []\\\\r\\\\n[Example].[Entry].[EntryAbility] receive. [2,\\\\\\\"test2\\\\\\\"]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892864253511\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718967774724734\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"[Example].[Entry].[EntryAbility] receive. []\\\\r\\\\n[Example].[Entry].[EntryAbility] receive. [2,\\\\\\\"test2\\\\\\\"]\\\\r\\\\n[Example].[Entry].[EntryAbility] receive. []\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892864253511\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718967774724736\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"[Example].[Entry].[EntryAbility] receive. []\\\\r\\\\n[Example].[Entry].[EntryAbility] receive. [2,\\\\\\\"test2\\\\\\\"]\\\\r\\\\n[Example].[Entry].[EntryAbility] receive. []\\\\r\\\\n[Example].[Entry].[EntryAbility] receive. [2,\\\\\\\"test2\\\\\\\"]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892864253511\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718967774724735\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"[Example].[Entry].[EntryAbility] receive. []\\\\r\\\\n[Example].[Entry].[EntryAbility] receive. [2,\\\\\\\"test2\\\\\\\"]\\\\r\\\\n[Example].[Entry].[EntryAbility] receive. [2,\\\\\\\"test2\\\\\\\"]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892864253511\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718967774724733\"}],\"inputType\":2,\"id\":\"101718892864253511\",\"type\":0,\"content\":\"<p>1.在UIAbility的onCreate生命周期中通过EventHub的on注册\\\"event1\\\"和\\\"event2\\\"事件。</p>\\n<p>import { hilog } from '@kit.PerformanceAnalysisKit';</p>\\n<p>import { UIAbility, Want, AbilityConstant } from '@kit.AbilityKit';</p>\\n<p>const DOMAIN_NUMBER: number = 0xFF00;</p>\\n<p>const TAG: string = '[EventAbility]';</p>\\n<p>export default class EntryAbility extends UIAbility {</p>\\n<p>onCreate(want: Want, launchParam: AbilityConstant.LaunchParam): void {</p>\\n<p>// 获取UIAbility实例的上下文</p>\\n<p>let context = this.context;</p>\\n<p>// 获取eventHub</p>\\n<p>let eventhub = this.context.eventHub;</p>\\n<p>// 执行订阅操作</p>\\n<p>eventhub.on('event1', this.eventFunc);</p>\\n<p>eventhub.on('event2', this.eventFunc);</p>\\n<p>hilog.info(DOMAIN_NUMBER, TAG, '%{public}s', 'Ability onCreate');</p>\\n<p>}</p>\\n<p>// ...</p>\\n<p>eventFunc(argOne: Context, argTwo: Context): void {</p>\\n<p>hilog.info(DOMAIN_NUMBER, TAG, 'receive. ' + `${argOne}, ${argTwo}`);</p>\\n<p>return;</p>\\n<p>}</p>\\n<p>}</p>\\n<p>2.在UI组件的click处理事件中调用如下的eventHubFunc，连续点击2次该控件后，运行日志输出是什么：</p>\\n<p>import common from '@kit.AbilityKit';;</p>\\n<p>import { promptAction } from '@kit.ArkUI';</p>\\n<p>@Entry</p>\\n<p>@Component</p>\\n<p>struct Page_EventHub {</p>\\n<p>private context = getContext(this) as common.UIAbilityContext;</p>\\n<p>eventHubFunc() : void {</p>\\n<p>this.context.eventHub.emit('event1');</p>\\n<p>this.context.eventHub.emit('event2', 2, 'test2');</p>\\n<p>this.context.eventHub.off('event1');</p>\\n<p>}</p>\\n<p>build() {</p>\\n<p>Column() {</p>\\n<p>// ...</p>\\n<p>List({ initialIndex: 0 }) {</p>\\n<p>ListItem() {</p>\\n<p>Row() {</p>\\n<p>// ...</p>\\n<p>}</p>\\n<p>.onClick(() =&gt; {</p>\\n<p>this.eventHubFunc();</p>\\n<p>promptAction.showToast({</p>\\n<p>message: $r('app.string.EventHubFuncA')</p>\\n<p>});</p>\\n<p>})</p>\\n<p>}</p>\\n<p>}</p>\\n<p>// ...</p>\\n<p>}</p>\\n<p>// ...</p>\\n<p>}</p>\\n<p>}</p>\",\"order\":25},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\\\\\"abilities\\\\\\\": [\\\\n  {\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"UIAbility1\\\\\\\",\\\\n    \\\\\\\"srcEntry\\\\\\\": \\\\\\\"./ets/entryability/Ability1.ets\\\\\\\",\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"$string:EntryAbility_desc\\\\\\\",\\\\n    \\\\\\\"icon\\\\\\\": \\\\\\\"$media:icon\\\\\\\",\\\\n    \\\\\\\"label\\\\\\\": \\\\\\\"$string:Ability1_label\\\\\\\",\\\\n    \\\\\\\"startWindowIcon\\\\\\\": \\\\\\\"$media:icon\\\\\\\",\\\\n    \\\\\\\"startWindowBackground\\\\\\\": \\\\\\\"$color:start_window_background\\\\\\\",\\\\n    \\\\\\\"exported\\\\\\\": true,\\\\n    \\\\\\\"launchType\\\\\\\": multiton\\\\n  },\\\\n  {\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"UIAbility2\\\\\\\",\\\\n    \\\\\\\"srcEntry\\\\\\\": \\\\\\\"./ets/entryability/Ability2.ets\\\\\\\",\\\\n    \\\\\\\"description\\\\\\\": \\\\\\\"$string:Ability2_desc\\\\\\\",\\\\n    \\\\\\\"icon\\\\\\\": \\\\\\\"$media:icon\\\\\\\",\\\\n    \\\\\\\"label\\\\\\\": \\\\\\\"$string:Ability2_label\\\\\\\",\\\\n    \\\\\\\"startWindowIcon\\\\\\\": \\\\\\\"$media:icon\\\\\\\",\\\\n    \\\\\\\"startWindowBackground\\\\\\\": \\\\\\\"$color:start_window_background\\\\\\\",\\\\n    \\\\\\\"exported\\\\\\\": true,\\\\n    \\\\\\\"launchType\\\\\\\": singleton,\\\\n    \\\\\\\"removeMissionAfterTerminate\\\\\\\":true\\\\n  }\\\\n]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"componentId\":\"101718975283973647\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"3个\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892773841364\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718954790395388\"},{\"optionContent\":\"1个\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892773841364\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718954790395386\"},{\"optionContent\":\"2个\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892773841364\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718954790395387\"},{\"optionContent\":\"0个\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892773841364\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718954790395385\"}],\"inputType\":2,\"id\":\"101718892773841364\",\"type\":0,\"content\":\"<p>一个应用有2个UIAbility组件，其module.json中abilities标签的配置如下方代码。</p>\\n<p>在手机设备上，执行如下操作后：</p>\\n<p>1.启动UIAbility1，然后back键返回销毁UIAbility1;</p>\\n<p>2.启动UIAbility2, 然后back键返回销毁UIAbility2;</p>\\n<p>3.启动UIAbility2, 然后back键返回销毁UIAbility2;</p>\\n<p>进入多任务列表，能看看到该应用的几个任务视图：</p>\",\"order\":26},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\\\\\"abilities\\\\\\\": [\\\\n\\\\n  {\\\\n\\\\n    \\\\\\\"name\\\\\\\" : \\\\\\\"EntryAbility\\\\\\\",\\\\n\\\\n    \\\\\\\"srcEntry\\\\\\\" : \\\\\\\"./etc/entryability/EntryAbility.ts\\\\\\\",\\\\n\\\\n    \\\\\\\"description\\\\\\\" : \\\\\\\"$string:EntryAbility_desc\\\\\\\",\\\\n\\\\n    \\\\\\\"exported\\\\\\\" : ture\\\\n\\\\n  }\\\\n\\\\n],\\\\n\\\\n\\\\\\\"extensionAbilities\\\\\\\": [\\\\n\\\\n  {\\\\n\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"ClockFormExtensionAbility\\\\\\\",\\\\n\\\\n    \\\\\\\"srcEntrance\\\\\\\": \\\\\\\"./ets/form/ClockFormExtensionAbility.ts\\\\\\\",\\\\n\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"form\\\\\\\"\\\\n\\\\n  },\\\\n\\\\n  {\\\\n\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"TipWorkSchedulerExtensionAbility\\\\\\\",\\\\n\\\\n    \\\\\\\"srcEntrance\\\\\\\": \\\\\\\"./ets/service/TipWorkSchedulerExtensionAbility.ts\\\\\\\",\\\\n\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"workScheduler\\\\\\\"\\\\n\\\\n  }\\\\n\\\\n]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975283973647\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"3个\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892706426359\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718967812400043\"},{\"optionContent\":\"4个\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892706426359\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718967812400044\"},{\"optionContent\":\"1个\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892706426359\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718967812400041\"},{\"optionContent\":\"2个\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718892706426359\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718967812400042\"}],\"inputType\":2,\"id\":\"101718892706426359\",\"type\":0,\"content\":\"开发者开发了一个应用，该应用只有一个hap包，其module.json5中abilities的配置如下 \\n<p>所示，包含1个UIAbility(无Web组件)、1个FormExtensionAbility组件、</p>\\n<p>1个WorkSchedulerExtensionAbility组件，那么该应用在运行过程中，</p>\\n<p>最多会存在几个应用进程：</p>\",\"order\":27},{\"score\":1.0,\"componentId\":\"101718975283973647\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"caller应用在后台，有START_INVISIBLE_ABILITY权限;\",\"questionId\":\"101718892888790733\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718892888790735\"},{\"optionContent\":\"caller应用在后台，申请了长时任务，有START_INVISIBLE_ABILITY权限;\",\"questionId\":\"101718892888790733\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718892888790737\"},{\"optionContent\":\"caller应用在后台，申请了长时任务，有START_ABILITY_FROM_BACKGROUND权限;\",\"questionId\":\"101718892888790733\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718892888790736\"},{\"optionContent\":\"caller应用在后台，有START_ABILITY_FROM_BACKGROUND权限;\",\"questionId\":\"101718892888790733\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718892888790734\"}],\"inputType\":1,\"id\":\"101718892888790733\",\"type\":0,\"content\":\"一个应用的一个UIAblity，其exported字段配置为false，以下哪个场景可以拉起这个UIAbility。\",\"order\":28},{\"score\":1.0,\"componentId\":\"101718975299489085\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"domain\",\"questionId\":\"101718893293205706\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893293205707\"},{\"optionContent\":\"eventType\",\"questionId\":\"101718893293205706\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893293205709\"},{\"optionContent\":\"name\",\"questionId\":\"101718893293205706\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893293205708\"},{\"optionContent\":\"params\",\"questionId\":\"101718893293205706\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893293205710\"}],\"inputType\":1,\"id\":\"101718893293205706\",\"type\":0,\"content\":\"作为应用开发者，你使用hiAppEvent订阅了崩溃事件。应用崩溃后，从onReceive接口返回的AppEventInfo中（）属性可以获取崩溃调用栈信息。\",\"order\":29},{\"score\":1.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975299489085\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"hiAppEvent.addWatcher({\\\\r\\\\n  name: \\\\\\\"watcher\\\\\\\",\\\\r\\\\n  onReceive: (domain: string, appEventGroups: Array<hiAppEvent.AppEventGroup>) => {\\\\r\\\\n  }\\\\r\\\\n})\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"questionId\":\"101718893225915497\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718954313373706\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"hiAppEvent.addWatcher({\\\\r\\\\n  name: \\\\\\\"watcher\\\\\\\",\\\\r\\\\n  appEventFilters: [\\\\r\\\\n    {\\\\r\\\\n      domain: hiAppEvent.domain.OS,\\\\r\\\\n      names: [hiAppEvent.event.APP_CRASH]\\\\r\\\\n    }\\\\r\\\\n  ],\\\\r\\\\n  onReceive: (domain: string, appEventGroups: Array<hiAppEvent.AppEventGroup>) => {\\\\r\\\\n  }\\\\r\\\\n })\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"questionId\":\"101718893225915497\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718954313373705\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"hiAppEvent.addWatcher({\\\\r\\\\n  name: \\\\\\\"watcher\\\\\\\",\\\\r\\\\n  appEventFilters: [\\\\r\\\\n    {\\\\r\\\\n      domain: hiAppEvent.domain.OS,\\\\r\\\\n      names: [hiAppEvent.event.APP_CRASH]\\\\r\\\\n    }\\\\r\\\\n  ]\\\\r\\\\n })\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"questionId\":\"101718893225915497\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718954313373704\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"hiAppEvent.addWatcher({\\\\r\\\\n  name: \\\\\\\"watcher\\\\\\\",\\\\r\\\\n  appEventFilters: [\\\\r\\\\n    {\\\\r\\\\n      names: [hiAppEvent.event.APP_FREEZE]\\\\r\\\\n    }\\\\r\\\\n  ],\\\\r\\\\n  onReceive: (domain: string, appEventGroups: Array<hiAppEvent.AppEventGroup>) => {\\\\r\\\\n  }\\\\r\\\\n })\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"questionId\":\"101718893225915497\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718954313373707\"}],\"inputType\":2,\"id\":\"101718893225915497\",\"type\":0,\"content\":\"hiAppEvent提供的Watcher接口，需要订阅到OS的崩溃事件，正确的实现方式（）\",\"order\":30},{\"score\":1.0,\"componentId\":\"101718975314897385\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"标记了@Reuseable的自定义组件的外层容器节点范围内\",\"questionId\":\"101718893463801676\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893463801677\"},{\"optionContent\":\"整个应用内都可以复用\",\"questionId\":\"101718893463801676\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893463801680\"},{\"optionContent\":\"标记了@Reuseable的自定义组件的父组件范围内\",\"questionId\":\"101718893463801676\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893463801678\"},{\"optionContent\":\"整个页面都可以复用\",\"questionId\":\"101718893463801676\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893463801679\"}],\"inputType\":1,\"id\":\"101718893463801676\",\"type\":0,\"content\":\"当标记了@Reuseable的自定义组件实现了组件复用后，这个组件的复用范围是什么？\",\"order\":31},{\"score\":1.0,\"componentId\":\"101718975314897385\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"ForEach和LazyForEach会根据定义的键值生成规则为数据源的每个数组项生成唯一键值，并创建相应的组件。\",\"questionId\":\"101718893463801696\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893463801698\"},{\"optionContent\":\"当在滚动容器中使用了LazyForEach，框架会根据滚动容器可视区域按需创建组件，当组件滑出可视区域外时，框架会进行组件销毁回收以降低内存占用。\",\"questionId\":\"101718893463801696\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893463801697\"},{\"optionContent\":\"长列表滚动场景，优先使用ForEach。\",\"questionId\":\"101718893463801696\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893463801700\"},{\"optionContent\":\"LazyForEach需要配合cachedCount和组件复用一起使用，以达到性能的最优表现。\",\"questionId\":\"101718893463801696\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893463801699\"}],\"inputType\":1,\"id\":\"101718893463801696\",\"type\":0,\"content\":\"关于ArkUI的ForEach和LazyForEach，下列说法错误的是？\",\"order\":32},{\"score\":1.0,\"componentId\":\"101718975314897385\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"onAreaChange\",\"questionId\":\"101718893463801686\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893463801688\"},{\"optionContent\":\"aboutToReuse\",\"questionId\":\"101718893463801686\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893463801689\"},{\"optionContent\":\"onTouch\",\"questionId\":\"101718893463801686\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893463801690\"},{\"optionContent\":\"onScroll\",\"questionId\":\"101718893463801686\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893463801687\"}],\"inputType\":1,\"id\":\"101718893463801686\",\"type\":0,\"content\":\"我们需要避免在逐帧调用的接口中执行耗时操作，下面哪个选项不属于上述的接口？\",\"order\":33},{\"score\":1.0,\"componentId\":\"101718975365064396\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"持续交付(CD, Continuous Delivery): 指的是，频繁的将软件的新版本，交付给质量团队或者用户，以供评审。如果评审通过，代码就进入生产阶段。它强调的是，不管怎么更新，软件是随时随地可以交付的。\",\"questionId\":\"101718893592097718\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718954077350453\"},{\"optionContent\":\"持续交付可以随时随地部署到生产环境\",\"questionId\":\"101718893592097718\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718954077350454\"},{\"optionContent\":\"在持续交付实践中，要考虑处理故障回滚和紧急修复，以确保系统在出现问题时能够快速恢复和修复。\",\"questionId\":\"101718893592097718\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718954077350456\"},{\"optionContent\":\"持续部署是将代码库中的任何更改都应该自动且快速地投入生产环境。持续部署等同于持续交付。\",\"questionId\":\"101718893592097718\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718954077350455\"}],\"inputType\":1,\"id\":\"101718893592097718\",\"type\":0,\"content\":\"下面持续交付&持续部署描述哪个是正确的：\",\"order\":34},{\"score\":1.0,\"componentId\":\"101718975377709681\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"元服务和应用可以共用一个代码工程，采用多目标产物构建方式，构建出应用和元服务两个产物，用于上架。\",\"questionId\":\"101718893799673621\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893799673624\"},{\"optionContent\":\"随着业务的发展，应用功能会越来越多，某些功能可以做成动态加载，动态加载的模块采用HAR工程来构建，方便复用和共享。\",\"questionId\":\"101718893799673621\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893799673623\"},{\"optionContent\":\"对于初始版本的应用，功能比较简单，可以考虑采用单HAP加上多个HAR工程构建代码工程。\",\"questionId\":\"101718893799673621\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893799673622\"},{\"optionContent\":\"一些应用的扩展能力，比如备份、服务卡片，可以采用ExtensionAbility做成单独的feature HAP包，独立分发。\",\"questionId\":\"101718893799673621\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893799673625\"}],\"inputType\":1,\"id\":\"101718893799673621\",\"type\":0,\"content\":\"以下关于应用架构技术选型说法不正确的是（）\",\"order\":35},{\"score\":1.0,\"componentId\":\"101718975377709681\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"HAP是应用安装和运行的基本单位，在DevEco Studio工程目录中，一个HAP对应一个Module。应用打包时，所有的Module都只能生成.hap文件。\",\"questionId\":\"101718893799674651\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893799674652\"},{\"optionContent\":\"DevEco Studio会在编译构建时，不需要对HAP进行一致性校验。\",\"questionId\":\"101718893799674651\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893799674654\"},{\"optionContent\":\"应用工程如果包含多个Module，在应用市场上架时，会将多个.hap文件打包成一个.app文件。\",\"questionId\":\"101718893799674651\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893799674653\"},{\"optionContent\":\"应用工程编出的app文件中，只能包含一个hap文件。\",\"questionId\":\"101718893799674651\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893799674655\"}],\"inputType\":1,\"id\":\"101718893799674651\",\"type\":0,\"content\":\"以下关于HAP（Harmony Ability Package）说法正确的是（）\",\"order\":36},{\"score\":1.0,\"componentId\":\"101718975377709681\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"系统能力都会保持绝对的兼容性，不能因为任何非兼容性的修改而导致开发者成本上升\",\"questionId\":\"101718893799674656\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893799674657\"},{\"optionContent\":\"已发布的系统能力有可能会发生非兼容性变更，比如新增特性或修改问题导致的行为不兼容，这种情况下应用需要关注changelog并进行适配。\",\"questionId\":\"101718893799674656\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893799674658\"},{\"optionContent\":\"应用不需要关注系统的兼容性变化，那都是系统开发人员需要关注的事情\",\"questionId\":\"101718893799674656\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893799674660\"},{\"optionContent\":\"安全法律法规等不可控因素会导致系统非兼容性变更，开发者需要积极适配\",\"questionId\":\"101718893799674656\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893799674659\"}],\"inputType\":1,\"id\":\"101718893799674656\",\"type\":0,\"content\":\"以下对系统兼容性的理解正确的是\",\"order\":37},{\"score\":1.0,\"componentId\":\"101718975377709681\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"将某些特性做成按需加载模块，若这3个ohpm仅在按需加载模块里面使用，则将其打包在按需加载模块中。\",\"questionId\":\"101718893799673636\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893799673639\"},{\"optionContent\":\"将这3个ohpm库封装到har包中，并对外提供必要的接口。\",\"questionId\":\"101718893799673636\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893799673640\"},{\"optionContent\":\"将3个ohpm库分别封装成3个hsp，并对外提供必要的接口。\",\"questionId\":\"101718893799673636\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893799673637\"},{\"optionContent\":\"将3个ohpm库封装成1个hsp，并对外提供必要的接口。\",\"questionId\":\"101718893799673636\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893799673638\"}],\"inputType\":1,\"id\":\"101718893799673636\",\"type\":0,\"content\":\"某App依赖了3个ohpm库，这3个库占用的体积都比较大。在App的技术架构中，有多个hap和多个hsp均依赖这3个库，为了减少app的首包大小，以下哪些做法是无效的？\",\"order\":38},{\"score\":1.0,\"componentId\":\"101718975392232358\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"导入需要的webSocket模块\",\"questionId\":\"101718947787010302\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718947787010303\"},{\"optionContent\":\"使用完WebSocket连接之后，主动断开连接\",\"questionId\":\"101718947787010302\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718947787010308\"},{\"optionContent\":\"创建一个WebSocket连接，返回一个WebSocket对象\",\"questionId\":\"101718947787010302\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718947787010304\"},{\"optionContent\":\"调用Session.start方法开启metadata数据输出\",\"questionId\":\"101718947787010302\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718947787010307\"},{\"optionContent\":\"(可选）订阅WebSocket的打开、消息接收、关闭、Error事件\",\"questionId\":\"101718947787010302\",\"examId\":\"101684221791158147\",\"optionOrder\":\"E\",\"inputType\":1,\"id\":\"101718947787010305\"},{\"optionContent\":\"根据URL地址，发起WebSocket连接\",\"questionId\":\"101718947787010302\",\"examId\":\"101684221791158147\",\"optionOrder\":\"F\",\"inputType\":1,\"id\":\"101718947787010306\"}],\"inputType\":1,\"id\":\"101718947787010302\",\"type\":0,\"content\":\"WebSocket连接开发步骤描述错误的是\",\"order\":39},{\"score\":3.0,\"componentId\":\"101718975406902411\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"页面嵌套了过多自定义组件。\",\"questionId\":\"101718893579148657\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893579148658\"},{\"optionContent\":\"没有在aboutToReuse更新关联的状态变量数据。\",\"questionId\":\"101718893579148657\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893579148659\"},{\"optionContent\":\"复用的自定义组件中使用if等条件渲染语句导致结构不相同，未使用reuseId标记。\",\"questionId\":\"101718893579148657\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893579148660\"},{\"optionContent\":\"在aboutToReuse回调函数中更新了冗余的状态变量\",\"questionId\":\"101718893579148657\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893579148661\"}],\"inputType\":1,\"id\":\"101718893579148657\",\"type\":1,\"content\":\"使用ArkUI组件复用之后，还是没有显著提升列表滑动场景的性能，属于组件复用未生效可能的原因有？\",\"order\":40},{\"score\":3.0,\"componentId\":\"101718975406902411\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"hap\",\"questionId\":\"101718893579148652\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718893579148653\"},{\"optionContent\":\"hsp\",\"questionId\":\"101718893579148652\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718893579148655\"},{\"optionContent\":\"har\",\"questionId\":\"101718893579148652\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718893579148654\"},{\"optionContent\":\"app\",\"questionId\":\"101718893579148652\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718893579148656\"}],\"inputType\":1,\"id\":\"101718893579148652\",\"type\":1,\"content\":\"某业务团队发现用户对他们App的某个特性使用率并不高，为了节省用户首次下载安装包的体积，考虑将该特性做成按需加载，那么推荐该特性使用的工程模块类型是？\",\"order\":41},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975406902411\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"环境一致性：保持开发、测试、生产等环境的高度一致性。\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718893579148634\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718893715689525\"},{\"optionContent\":\"监控和回滚机制：实时监控部署后的应用状态，如有问题及时回滚。\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718893579148634\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718893715689528\"},{\"optionContent\":\"<p>手工部署：持续部署可以采用手工部署的方式发布软件：</p>\\n<p>1、有一份非常详尽的文档，该文档描述了执行步骤及每个步骤中易出错的地方；</p>\\n<p>2、以手工测试来确认该应用程序是否运行正确；</p>\\n<p>3、在发布时，常常会修正一些在发布过程中发现的问题。</p>\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718893579148634\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718893715689529\"},{\"optionContent\":\"灰度发布：先在小部分用户或区域进行部署，观察没问题后再全面推广。\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718893579148634\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718893715689527\"},{\"optionContent\":\"<p>手工配置管理：</p>\\n<p>1、直接修改生产环境上的配置来改变系统配置；</p>\\n<p>2、集群中各节点的行为有所不同；</p>\\n<p>3、靠人手工恢复环境。手动记载配置包括操作系统、应用服务器、关系型数据库管理系统、Web服务器或其他基础设施设置。</p>\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718893579148634\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"E\",\"inputType\":2,\"id\":\"101718893715689530\"},{\"optionContent\":\"自动化部署流程：从代码提交到部署的整个流程应尽可能自动化。\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718893579148634\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"F\",\"inputType\":2,\"id\":\"101718893715689526\"},{\"optionContent\":\"开发完成之后再向类生产环境部署：当软件被第一次部署到类生产环境(比如试运行环境)时，就是大部分开发工作完成时，至少是开发团队认为“该软件开发完成了”。\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718893579148634\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"G\",\"inputType\":2,\"id\":\"101718893715689531\"}],\"inputType\":2,\"id\":\"101718893579148634\",\"type\":1,\"content\":\"哪些是持续部署最佳实践？\",\"order\":42},{\"score\":3.0,\"componentId\":\"101718975424343161\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"混淆支持ArkTS/TS/JS文件的混淆\",\"questionId\":\"101718898145625852\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718898145626856\"},{\"optionContent\":\"代码混淆已经被集成了到SDK中，可以在DevEco Studio中方便地使用。\",\"questionId\":\"101718898145625852\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718898145625854\"},{\"optionContent\":\"API 10及以上版本的Stage模型、编译模式为release时，默认开启代码混淆功能；默认的混淆功能仅会混淆函数参数和局部变量的名称。\",\"questionId\":\"101718898145625852\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718898145625855\"},{\"optionContent\":\"针对工程源码的混淆可以降低工程被破解攻击的风险，缩短函数名、类名和属性名，减小应用的大小。\",\"questionId\":\"101718898145625852\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718898145625853\"}],\"inputType\":1,\"id\":\"101718898145625852\",\"type\":1,\"content\":\"下面关于混淆的描述正确的是\",\"order\":43},{\"score\":3.0,\"componentId\":\"101718975424343161\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"动态导入import()是个异步接口，调用后将返回一个promise\",\"questionId\":\"101718898145625817\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718898145625819\"},{\"optionContent\":\"动态import根据入参是否为常量字符串分为常量动态import和变量动态import两种\",\"questionId\":\"101718898145625817\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718898145625818\"},{\"optionContent\":\"HAR模块间只有变量动态import时可以进行模块解耦\",\"questionId\":\"101718898145625817\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718898145625820\"},{\"optionContent\":\"常量动态import也必须配置runtimeOnly选项\",\"questionId\":\"101718898145625817\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718898145625821\"}],\"inputType\":1,\"id\":\"101718898145625817\",\"type\":1,\"content\":\"下面关于动态import描述正确的是\",\"order\":44},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"class Point {\\\\r\\\\n  public x: number\\\\r\\\\n  public y: number\\\\r\\\\n  constructor(x: number, y: number) {\\\\r\\\\n    this.x = x\\\\r\\\\n    this.y = y\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nlet p = new Point(1.0, 1.0);\\\\r\\\\ndelete p.x;\\\\r\\\\np.z = 2.0;\\\\r\\\\np.x = 'Hello!';\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975424343161\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"p.x = 'Hello!';\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718900706498834\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718971059016925\"},{\"optionContent\":\"p.z = 2.0;\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718900706498834\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718971059016924\"},{\"optionContent\":\"let p = new Point(1.0, 1.0);\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718900706498834\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718971059016922\"},{\"optionContent\":\"delete p.x;\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718900706498834\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718971059016923\"}],\"inputType\":2,\"id\":\"101718900706498834\",\"type\":1,\"content\":\"以下代码片段哪几处违反了ArkTS语法规范。\",\"order\":45},{\"score\":3.0,\"componentId\":\"101718975424343161\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"动态import支持加载远程HAR模块\",\"questionId\":\"101718898145625822\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718898145625825\"},{\"optionContent\":\"动态import支持加载本地HAR模块\",\"questionId\":\"101718898145625822\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718898145625824\"},{\"optionContent\":\"动态import支持加载OHPM模块\",\"questionId\":\"101718898145625822\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718898145625826\"},{\"optionContent\":\"动态import支持加载HSP模块\",\"questionId\":\"101718898145625822\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718898145625823\"}],\"inputType\":1,\"id\":\"101718898145625822\",\"type\":1,\"content\":\"当前动态import支持导入的模块类型有哪些？\",\"order\":46},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"class Person {}\\\\n\\\\nclass Student extends Person {} \\\\n\\\\nclass Instructor implements Person {}\\\\n\\\\ninterface Shape {}\\\\n\\\\ninterface Circle implements Shape {}\\\\n\\\\nclass Square implements Shape {}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975424343161\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"Circle\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718898145626882\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718971228416029\"},{\"optionContent\":\"Instructor\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718898145626882\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718971228416028\"},{\"optionContent\":\"Square\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718898145626882\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718971228416030\"},{\"optionContent\":\"Student\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718898145626882\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718971228416027\"}],\"inputType\":2,\"id\":\"101718898145626882\",\"type\":1,\"content\":\"<p>以下代码片段哪几个class/interface违反了ArkTS语法规范。</p>\",\"order\":47},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975424343161\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"if(isJedi) {\\\\n  fight();\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"questionId\":\"101718894991751514\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718978927906916\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"const arr = [1, 2, 3]; \\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"questionId\":\"101718894991751514\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718978927906919\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"function fight(): void {\\\\r\\\\n  console.log('Swooosh!');\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"questionId\":\"101718894991751514\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718978927906917\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"if (flag) {\\\\r\\\\n  //...\\\\r\\\\n}else {\\\\r\\\\n  //...\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"questionId\":\"101718894991751514\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718978927906918\"}],\"inputType\":2,\"id\":\"101718894991751514\",\"type\":1,\"content\":\"下面代码符合ArkTS编程规范的是\",\"order\":48},{\"score\":3.0,\"componentId\":\"101718975424343161\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"-enable-toplevel-obfuscation：开启属性混淆\",\"questionId\":\"101718898145625842\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718898145625845\"},{\"optionContent\":\" -disable-obfuscation：关闭所有混淆\",\"questionId\":\"101718898145625842\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718898145625843\"},{\"optionContent\":\"-enable-export-obfuscation：开启直接导入或导出的类或对象的名称和属性名混淆\",\"questionId\":\"101718898145625842\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718898145625846\"},{\"optionContent\":\"-enable-property-obfuscation：开启顶层作用域名称混淆\",\"questionId\":\"101718898145625842\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718898145625844\"}],\"inputType\":1,\"id\":\"101718898145625842\",\"type\":1,\"content\":\"下面关于混淆规则描述正确的是\",\"order\":49},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"function foo1(value1?: number, value2: number) {\\\\n\\\\n  if(value1 == undefined){\\\\n\\\\n    return value2;\\\\n\\\\n  }\\\\n\\\\n    return value1 + value2;\\\\n\\\\n}\\\\n\\\\nfunction foo2(value1: number, value2?: number) {\\\\n\\\\n  if (value2 == undefined) {\\\\n\\\\n    return value1;\\\\n\\\\n  }\\\\n\\\\n  return value1 + value2;\\\\n\\\\n}\\\\n\\\\nfunction foo3(value: number, ...array: number[]) {\\\\n\\\\n  return value;\\\\n\\\\n}\\\\n\\\\nfunction foo4( ...array: number[], value: number) {\\\\n\\\\n  return value;\\\\n\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"componentId\":\"101718975424343161\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"foo3\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718894055887427\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718976338495252\"},{\"optionContent\":\"foo2\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718894055887427\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718976338495251\"},{\"optionContent\":\"foo4\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718894055887427\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718976338495253\"},{\"optionContent\":\"foo1\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718894055887427\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718976338495250\"}],\"inputType\":2,\"id\":\"101718894055887427\",\"type\":1,\"content\":\"<p>以下代码片段哪几个函数违反了ArkTS语法规范。</p>\",\"order\":50},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"@Entry\\\\r\\\\n@Component\\\\r\\\\nstruct Index {\\\\r\\\\n  @State count: number = 0;\\\\r\\\\n  @State @Watch('onValueChange') value: number = 50;\\\\r\\\\n\\\\r\\\\n  onValueChange() {\\\\r\\\\n    this.count = this.value;\\\\r\\\\n  }\\\\r\\\\n  build() {\\\\r\\\\n    Column() {\\\\r\\\\n      Text(`${this.count}`)\\\\r\\\\n      Button(\\\\\\\"A\\\\\\\")\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          this.count = 0;\\\\r\\\\n        })\\\\r\\\\n      Button(\\\\\\\"B\\\\\\\")\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          for (let i = 0; i < 1000; i++) {\\\\r\\\\n            this.count = i;\\\\r\\\\n          }\\\\r\\\\n          for (let i = 1000; i > 0; i--) {\\\\r\\\\n            this.count = i;\\\\r\\\\n          }\\\\r\\\\n          this.count--;\\\\r\\\\n        })\\\\r\\\\n      Button(\\\\\\\"C\\\\\\\")\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          this.value = 100;\\\\r\\\\n        })\\\\r\\\\n      Button(\\\\\\\"D\\\\\\\")\\\\r\\\\n        .onClick(() => {\\\\r\\\\n          setInterval(()=>{\\\\r\\\\n            this.count++;\\\\r\\\\n          }, 1000)\\\\r\\\\n        })\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"typescript\\\"}\",\"componentId\":\"101718975462513709\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"B\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718897306715566\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101719194135435049\"},{\"optionContent\":\"D\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718897306715566\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101719194135435051\"},{\"optionContent\":\"A\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718897306715566\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101719194135435048\"},{\"optionContent\":\"C\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718897306715566\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101719194135435050\"}],\"inputType\":2,\"id\":\"101718897306715566\",\"type\":1,\"content\":\"<p>依次点击A、B、C、D四个按钮，其中不会触发UI刷新的是：</p>\",\"order\":51},{\"score\":3.0,\"componentId\":\"101718975462513709\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"priorityGesture\",\"questionId\":\"101718897347774627\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718897348065631\"},{\"optionContent\":\"parallelGesture\",\"questionId\":\"101718897347774627\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718897348064628\"},{\"optionContent\":\"GesureGroup\",\"questionId\":\"101718897347774627\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718897348065630\"},{\"optionContent\":\"gesture\",\"questionId\":\"101718897347774627\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718897348065629\"}],\"inputType\":1,\"id\":\"101718897347774627\",\"type\":1,\"content\":\"Grid() {\\n        ForEach(this.numbers, (day: string) => {\\n          ForEach(this.numbers, (day: string) => {\\n            GridItem() {\\n              Text(day)\\n                .fontSize(16)\\n                .backgroundColor(0xF9CF93)\\n                .width('100%')\\n                .height(80)\\n                .textAlign(TextAlign.Center)\\n            }\\n          }, (day: string) => day)\\n        }, (day: string) => day)\\n      }\\n      .columnsTemplate('1fr '.repeat(this.columns))\\n      .columnsGap(10)\\n      .rowsGap(10)\\n      .width('90%')\\n      .scrollBar(BarState.Off)\\n      .backgroundColor(0xFAEEE0)\\n      .height('100%')\\n      .cachedCount(3)\\n      // 切换列数item位置重排动画\\n      .animation({\\n        duration: 300,\\n        curve: Curve.Smooth\\n      })\\n      .xxxx?(\\n        PinchGesture()\\n          .onActionEnd((event: GestureEvent) => {\\n            console.info('end scale:' + event.scale)\\n            // 手指分开，减少列数以放大Item，触发阈值可以自定义，示例为2\\n            if (event.scale > 2) {\\n              this.columns--\\n            } else if (event.scale < 0.6) {\\n              this.columns++\\n            }\\n            // 可以根据设备屏幕宽度设定最大和最小列数，此处以最小1列最大4列为例\\n            this.columns = Math.min(4, Math.max(1, this.columns));\\n            AppStorage.setOrCreate<number>('columnsCount', this.columns)\\n          })\\n      )\\n如果想让grid上的捏合手势手势生效，而不跟grid上的滚动手势形成冲突，.xxxx?手势接口应该怎么配置?\",\"order\":52},{\"score\":3.0,\"componentId\":\"101718975462513709\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"map<string,string>\",\"questionId\":\"101718898065771804\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718898065771807\"},{\"optionContent\":\"string\",\"questionId\":\"101718898065771804\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718898065771805\"},{\"optionContent\":\"arrayBuffer\",\"questionId\":\"101718898065771804\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718898065771806\"},{\"optionContent\":\"record<string,string>\",\"questionId\":\"101718898065771804\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718898065771808\"}],\"inputType\":1,\"id\":\"101718898065771804\",\"type\":1,\"content\":\"以下哪些是可以在Navigation中使用pushPathByName接口传递的params的参数类型\",\"order\":53},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718975462513709\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"@Entry\\\\r\\\\n@Component\\\\r\\\\nstruct SpanExample {\\\\r\\\\n  build() {\\\\r\\\\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceBetween }) {\\\\r\\\\n      Text() {\\\\r\\\\n        Span('span letter spacing')\\\\r\\\\n          .letterSpacing(3)\\\\r\\\\n          .fontSize(20)\\\\r\\\\n      }.fontSize(30)\\\\r\\\\n    }.width('100%').height(250).padding({ left: 35, right: 35, top: 35 })\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718897660466640\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718897660774643\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"import { LengthMetrics, LengthUnit } from '@ohos.arkui.node'\\\\r\\\\n\\\\r\\\\n \\\\r\\\\n\\\\r\\\\n@Entry\\\\r\\\\n@Component\\\\r\\\\nstruct Index {\\\\r\\\\n  fontStyleAttr: TextStyle = new TextStyle({fontSize:LengthMetrics.vp(20)});\\\\r\\\\n  mutableStyledString: MutableStyledString = new MutableStyledString(\\\\\\\"hello\\\\\\\", [{\\\\r\\\\n    start: 0,\\\\r\\\\n    length: 5,\\\\r\\\\n    styledKey: StyledStringKey.FONT,\\\\r\\\\n    styledValue: this.fontStyleAttr\\\\r\\\\n  }]);\\\\r\\\\n  controller: TextController = new TextController();\\\\r\\\\n\\\\r\\\\n  async onPageShow() {\\\\r\\\\n    this.controller.setStyledString(this.mutableStyledString)\\\\r\\\\n  }\\\\r\\\\n\\\\r\\\\n  build() {\\\\r\\\\n    Column() {\\\\r\\\\n      // 显示属性字符串\\\\r\\\\n      Text(undefined, { controller: this.controller })\\\\r\\\\n    }.width('100%')\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718897660466640\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718897660774644\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"// xxx.ets\\\\r\\\\n@Entry\\\\r\\\\n@Component\\\\r\\\\nstruct Index {\\\\r\\\\n  build() {\\\\r\\\\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceBetween }) {\\\\r\\\\n      // 文本水平方向对齐方式设置\\\\r\\\\n      // 单行文本\\\\r\\\\n      Text('TextAlign set to Center.')\\\\r\\\\n        .textAlign(TextAlign.Center)\\\\r\\\\n        .fontSize(20)\\\\r\\\\n        .border({ width: 1 })\\\\r\\\\n        .padding(10)\\\\r\\\\n        .width('100%')\\\\r\\\\n    }.height(600).width(350).padding({ left: 35, right: 35, top: 35 })\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718897660466640\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718897660774642\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"// xxx.ets\\\\r\\\\n@Entry\\\\r\\\\n@Component\\\\r\\\\nstruct Index {\\\\r\\\\n  build() {\\\\r\\\\n    Flex({ direction: FlexDirection.Column, alignItems: ItemAlign.Start, justifyContent: FlexAlign.SpaceBetween }) {\\\\r\\\\n      Text('This is the text with the height adaptive policy set')\\\\r\\\\n        .width('80%')\\\\r\\\\n        .height(90)\\\\r\\\\n        .minFontSize(20)\\\\r\\\\n    }.width('100%').height(250).padding({ left: 35, right: 35, top: 35 })\\\\r\\\\n  }\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718897660466640\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718897660774641\"}],\"inputType\":2,\"id\":\"101718897660466640\",\"type\":1,\"content\":\"以下哪些实现方式可实现文本字号20的效果\",\"order\":54},{\"score\":3.0,\"componentId\":\"101718975481432189\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"若遇到App运行卡顿或系统整体无响应（App Freeze, System Freeze）的情况，可以通过性能分析工具中的Frame Insight和Allocation Insight功能，分析应用的资源消耗情况，寻找可能的瓶颈\",\"questionId\":\"101718897775690680\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718897775690683\"},{\"optionContent\":\"查看DevEco Studio log工具栏输出的错误日志，根据日志提示分析应用崩溃的具体原因及代码位置\",\"questionId\":\"101718897775690680\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718897775690681\"},{\"optionContent\":\"当怀疑问题是由于C++代码中的内存错误（如数组越界、内存泄露、重复释放内存）引起时，进入“Run/Debug Configurations”设置界面，勾选启用Address Sanitizer (ASan)，然后重新部署应用进行测试以获取更详细的内存问题报告\",\"questionId\":\"101718897775690680\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718897775690682\"},{\"optionContent\":\"利用系统自动生成的FaultLog，包括App Freeze、CPP Crash、JS Crash、System Freeze和ASan报告，这些报告会详细记录故障发生时的环境、堆栈信息和可能的故障原因，是排查问题的重要参考\",\"questionId\":\"101718897775690680\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718897775690684\"}],\"inputType\":1,\"id\":\"101718897775690680\",\"type\":1,\"content\":\"在使用DevEco Studio进行HarmonyOS应用开发和调试过程中，开发者小张遇到应用运行时意外终止的情况，他需要快速定位并解决导致应用崩溃的问题。以下哪些做法可以帮助小张有效分析和处理这些问题\",\"order\":55},{\"score\":3.0,\"componentId\":\"101718977812264130\",\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"一次上架多端部署。\",\"questionId\":\"101718894729757580\",\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":1,\"id\":\"101718894729757583\"},{\"optionContent\":\"若多个模块依赖了不同版本的HAR，使用OHPM的overrides机制配置指定使用哪个版本的HAR，以减少包大小。\",\"questionId\":\"101718894729757580\",\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":1,\"id\":\"101718894729757584\"},{\"optionContent\":\"避免用户首次下载应用耗时过长，及过多占用用户空间，不常用功能做成按需加载。\",\"questionId\":\"101718894729757580\",\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":1,\"id\":\"101718894729757581\"},{\"optionContent\":\"使用路由表进行模块间解耦。\",\"questionId\":\"101718894729757580\",\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":1,\"id\":\"101718894729757582\"}],\"inputType\":1,\"id\":\"101718894729757580\",\"type\":1,\"content\":\"在大型软件工程中，一般会伴随着多团队开发，各团队开发自己的业务模块，最后再由集成交付团队集成到一起，下面哪些是大型应用模块化开发最佳实践\",\"order\":56},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718977812264130\",\"showAddCode\":false,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"导出native方法，在HSP中也可以包含C++编写的so。对于so中的native方法，HSP通过间接的方式导出，以导出liblibrary.so的乘法接口multi为例：\",\"code\":\"{\\\"leftZoneContent\\\":\\\"// library/src/main/ets/utils/nativeTest.ts\\\\r\\\\nimport native from 'liblibrary.so';\\\\r\\\\nexport function nativeMulti(a: number, b: number): number {\\\\r\\\\n  let result: number = native.multi(a, b);\\\\r\\\\n  return result;\\\\r\\\\n}\\\\r\\\\n对外暴露的接口，需要在入口文件index.ets中声明：\\\\r\\\\n// library/index.ets\\\\r\\\\nexport { nativeMulti } from './src/main/ets/utils/nativeTest';\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718895325552459\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718895325888462\"},{\"optionContent\":\"导出ArkUI组件\",\"code\":\"{\\\"leftZoneContent\\\":\\\"// library/src/main/ets/components/MyTitleBar.ets\\\\r\\\\n@Component\\\\r\\\\nexport struct MyTitleBar {\\\\r\\\\n  build() {\\\\r\\\\n    Row() {\\\\r\\\\n      Text($r('app.string.library_title'))\\\\r\\\\n        .id('library')\\\\r\\\\n        .fontFamily('HarmonyHeiTi')\\\\r\\\\n        .fontWeight(FontWeight.Bold)\\\\r\\\\n        .fontSize(32)\\\\r\\\\n        .fontColor($r('app.color.text_color'))\\\\r\\\\n    }\\\\r\\\\n    .width('100%')\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n对外暴露的接口，需要在入口文件index.ets中声明：\\\\r\\\\n// library/index.ets\\\\r\\\\nexport { MyTitleBar } from './src/main/ets/components/MyTitleBar';\\\\r\\\\n\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718895325552459\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718895325888460\"},{\"optionContent\":\"导出ts类和方法\",\"code\":\"{\\\"leftZoneContent\\\":\\\"// library/src/main/ets/utils/test.ts\\\\r\\\\nexport class Log {\\\\r\\\\n  static info(msg: string): void {\\\\r\\\\n    console.info(msg);\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\nexport function add(a: number, b: number): number {\\\\r\\\\n  return a + b;\\\\r\\\\n}\\\\r\\\\nexport function minus(a: number, b: number): number {\\\\r\\\\n  return a - b;\\\\r\\\\n}\\\\r\\\\n对外暴露的接口，需要在入口文件index.ets中声明：\\\\r\\\\n// library/index.ets\\\\r\\\\nexport { Log, add, minus } from './src/main/ets/utils/test';\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718895325552459\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718895325888461\"}],\"inputType\":2,\"id\":\"101718895325552459\",\"type\":1,\"content\":\"HSP支持导出ArkUI组件、接口，供应用内的其他HAP/HSP引用，下面正确的是\",\"order\":57},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"import { hilog } from '@kit.PerformanceAnalysisKit';\\\\r\\\\nimport { UIAbility, common, OpenLinkOptions } from '@kit.AbilityKit';\\\\r\\\\nimport { BusinessError } from '@kit.BasicServicesKit';\\\\r\\\\n\\\\r\\\\nexport default class MyAbility extends UIAbility {\\\\r\\\\n  onForeground() {\\\\r\\\\n    let link: string = \\\\\\\"https://www.example.com\\\\\\\"\\\\r\\\\n    let openLinkOptions: OpenLinkOptions = {\\\\r\\\\n      appLinkingOnly: true,\\\\r\\\\n      parameters: {demo_key: \\\\\\\"demo_value\\\\\\\"}\\\\r\\\\n    };\\\\r\\\\n    try {\\\\r\\\\n      this.context.openLink(\\\\r\\\\n        link,\\\\r\\\\n        openLinkOptions,\\\\r\\\\n        (err, result) => {\\\\r\\\\n          hilog.error(DOMAIN, TAG, 'openLink callback error.code:' + JSON.stringify(err));\\\\r\\\\n        }\\\\r\\\\n      ).then(()=>{\\\\r\\\\n        hilog.info(DOMAIN, TAG, 'open link success.');\\\\r\\\\n      }).catch((err: BusinessError)=>{\\\\r\\\\n        hilog.error(DOMAIN, TAG, 'open link failed, errCode ' + JSON.stringify(err.code));\\\\r\\\\n      })\\\\r\\\\n    }\\\\r\\\\n    catch (e) {\\\\r\\\\n      hilog.error(DOMAIN, TAG, 'exception occured, errCode ' + JSON.stringify(e.code));\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718977812264130\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"{\\\\r\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"TargetAbility\\\\\\\",\\\\r\\\\n    \\\\\\\"skills\\\\\\\": [\\\\r\\\\n      {\\\\r\\\\n        \\\\\\\"actions\\\\\\\":[\\\\r\\\\n          \\\\\\\"ohos.want.action.viewData\\\\\\\",\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"entities\\\\\\\":[\\\\r\\\\n          \\\\\\\"entity.system.browsable\\\\\\\",\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"uris\\\\\\\":[\\\\r\\\\n          {\\\\r\\\\n            \\\\\\\"scheme\\\\\\\": \\\\\\\"https\\\\\\\",\\\\r\\\\n            \\\\\\\"host\\\\\\\": \\\\\\\"www.test.com\\\\\\\",\\\\r\\\\n            \\\\\\\"port\\\\\\\": \\\\\\\"8080\\\\\\\",\\\\r\\\\n            \\\\\\\"path\\\\\\\": \\\\\\\"path\\\\\\\",\\\\r\\\\n            \\\\\\\"autoVerify\\\\\\\": ture\\\\r\\\\n          }\\\\r\\\\n        ]\\\\r\\\\n      }\\\\r\\\\n    ]\\\\r\\\\n}\\\\r\\\\n\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718895466809727\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718895467115728\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"{\\\\r\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"TargetAbility\\\\\\\",\\\\r\\\\n    \\\\\\\"skills\\\\\\\": [\\\\r\\\\n      {\\\\r\\\\n        \\\\\\\"actions\\\\\\\":[\\\\r\\\\n          \\\\\\\"ohos.want.action.sendData\\\\\\\",\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"entities\\\\\\\":[\\\\r\\\\n          \\\\\\\"entity.system.browsable\\\\\\\",\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"uris\\\\\\\":[\\\\r\\\\n          {\\\\r\\\\n            \\\\\\\"scheme\\\\\\\": \\\\\\\"http\\\\\\\",\\\\r\\\\n            \\\\\\\"host\\\\\\\": \\\\\\\"www.test.com\\\\\\\",\\\\r\\\\n            \\\\\\\"port\\\\\\\": \\\\\\\"8080\\\\\\\",\\\\r\\\\n            \\\\\\\"path\\\\\\\": \\\\\\\"path\\\\\\\",\\\\r\\\\n            \\\\\\\"autoVerify\\\\\\\": ture\\\\r\\\\n          }\\\\r\\\\n        ]\\\\r\\\\n      }\\\\r\\\\n    ]\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718895466809727\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718895467115730\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"{\\\\r\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"TargetAbility\\\\\\\",\\\\r\\\\n    \\\\\\\"skills\\\\\\\": [\\\\r\\\\n      {\\\\r\\\\n        \\\\\\\"actions\\\\\\\":[\\\\r\\\\n          \\\\\\\"ohos.want.action.sendData\\\\\\\",\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"entities\\\\\\\":[\\\\r\\\\n          \\\\\\\"entity.system.browsable\\\\\\\",\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"uris\\\\\\\":[\\\\r\\\\n          {\\\\r\\\\n            \\\\\\\"scheme\\\\\\\": \\\\\\\"https\\\\\\\",\\\\r\\\\n            \\\\\\\"host\\\\\\\": \\\\\\\"www.test.com\\\\\\\",\\\\r\\\\n            \\\\\\\"port\\\\\\\": \\\\\\\"8080\\\\\\\",\\\\r\\\\n            \\\\\\\"path\\\\\\\": \\\\\\\"path\\\\\\\",\\\\r\\\\n            \\\\\\\"autoVerify\\\\\\\": ture\\\\r\\\\n          }\\\\r\\\\n        ]\\\\r\\\\n      }\\\\r\\\\n    ]\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718895466809727\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718895467115729\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"{\\\\r\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"TargetAbility\\\\\\\",\\\\r\\\\n    \\\\\\\"skills\\\\\\\": [\\\\r\\\\n      {\\\\r\\\\n        \\\\\\\"actions\\\\\\\":[\\\\r\\\\n          \\\\\\\"ohos.want.action.vieData\\\\\\\",\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"entities\\\\\\\":[\\\\r\\\\n          \\\\\\\"entity.system.browsable\\\\\\\",\\\\r\\\\n        ],\\\\r\\\\n        \\\\\\\"uris\\\\\\\":[\\\\r\\\\n          {\\\\r\\\\n            \\\\\\\"scheme\\\\\\\": \\\\\\\"http\\\\\\\",\\\\r\\\\n            \\\\\\\"host\\\\\\\": \\\\\\\"www.test.com\\\\\\\",\\\\r\\\\n            \\\\\\\"port\\\\\\\": \\\\\\\"8080\\\\\\\",\\\\r\\\\n            \\\\\\\"path\\\\\\\": \\\\\\\"path\\\\\\\"\\\\r\\\\n          }\\\\r\\\\n        ]\\\\r\\\\n      }\\\\r\\\\n    ]\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718895466809727\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718895467115731\"}],\"inputType\":2,\"id\":\"101718895466809727\",\"type\":1,\"content\":\"通过如下openLink的接口启动，如下哪些配置的UIAbility不可能被拉起\",\"order\":58},{\"score\":3.0,\"code\":\"{\\\"leftZoneContent\\\":\\\"let want = {\\\\r\\\\n  \\\\\\\"uri\\\\\\\" : \\\\\\\"https://www.test.com:8080/query/books\\\\\\\",\\\\r\\\\n  \\\\\\\"type\\\\\\\" : \\\\\\\"text/plain\\\\\\\"\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ncontext.startAbility(want).then((data))=> {\\\\r\\\\n  console.log(TAG + \\\\\\\"startAbility success\\\\\\\");\\\\r\\\\n}).catch((err))=> {\\\\r\\\\n  console.log(TAG + \\\\\\\"startAbility failed.\\\\\\\");\\\\r\\\\n}\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"componentId\":\"101718977812264130\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"options\":[{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\\\\\"skills\\\\\\\": [\\\\r\\\\n  {\\\\r\\\\n    \\\\\\\"uris\\\\\\\":[\\\\r\\\\n      {\\\\r\\\\n        \\\\\\\"scheme\\\\\\\": \\\\\\\"https\\\\\\\",\\\\r\\\\n        \\\\\\\"host\\\\\\\": \\\\\\\"www.test.com\\\\\\\",\\\\r\\\\n        \\\\\\\"pathStartWith\\\\\\\" : \\\\\\\"query/books\\\\\\\",\\\\r\\\\n        \\\\\\\"type\\\\\\\" : \\\\\\\"text/*\\\\\\\"        \\\\r\\\\n      }\\\\r\\\\n    ]\\\\r\\\\n  }\\\\r\\\\n]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718894853515437\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"A\",\"inputType\":2,\"id\":\"101718894854621438\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\\\\\"skills\\\\\\\": [\\\\r\\\\n  {\\\\r\\\\n    \\\\\\\"uris\\\\\\\":[\\\\r\\\\n      {\\\\r\\\\n        \\\\\\\"scheme\\\\\\\": \\\\\\\"https\\\\\\\",\\\\r\\\\n        \\\\\\\"host\\\\\\\": \\\\\\\"www.test.com\\\\\\\",\\\\r\\\\n        \\\\\\\"pathStartWith\\\\\\\" : \\\\\\\"query/books\\\\\\\",\\\\r\\\\n        \\\\\\\"type\\\\\\\" : \\\\\\\"text/plain\\\\\\\"        \\\\r\\\\n      }\\\\r\\\\n    ]\\\\r\\\\n  }\\\\r\\\\n]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718894853515437\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"B\",\"inputType\":2,\"id\":\"101718894854621439\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\\\\\"skills\\\\\\\": [\\\\r\\\\n  {\\\\r\\\\n    \\\\\\\"uris\\\\\\\":[\\\\r\\\\n      {\\\\r\\\\n        \\\\\\\"scheme\\\\\\\": \\\\\\\"https\\\\\\\",\\\\r\\\\n        \\\\\\\"host\\\\\\\": \\\\\\\"www.test.com\\\\\\\",\\\\r\\\\n        \\\\\\\"type\\\\\\\" : \\\\\\\"text/plain\\\\\\\"        \\\\r\\\\n      }\\\\r\\\\n    ]\\\\r\\\\n  }\\\\r\\\\n]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718894853515437\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"C\",\"inputType\":2,\"id\":\"101718894854621441\"},{\"optionContent\":\"\",\"code\":\"{\\\"leftZoneContent\\\":\\\"\\\\\\\"skills\\\\\\\": [\\\\r\\\\n  {\\\\r\\\\n    \\\\\\\"uris\\\\\\\":[\\\\r\\\\n      {\\\\r\\\\n        \\\\\\\"scheme\\\\\\\": \\\\\\\"https\\\\\\\",\\\\r\\\\n        \\\\\\\"type\\\\\\\" : \\\\\\\"text/*\\\\\\\"        \\\\r\\\\n      }\\\\r\\\\n    ]\\\\r\\\\n  }\\\\r\\\\n]\\\",\\\"hightLight\\\":[],\\\"devLanguage\\\":\\\"\\\"}\",\"questionId\":\"101718894853515437\",\"showAddCode\":true,\"examId\":\"101684221791158147\",\"optionOrder\":\"D\",\"inputType\":2,\"id\":\"101718894854621440\"}],\"inputType\":2,\"id\":\"101718894853515437\",\"type\":1,\"content\":\"使用如下的代码去启动一个ability时，哪种skills定义的组件能够被匹配到：\",\"order\":59}],\"fullScore\":100,\"startTime\":1719910797000,\"endTime\":1719914397000,\"noticeEndTime\":900,\"passScore\":80,\"switchScreenTimes\":3}}"